<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IP//ggH//8ED///gB///8A////gf///8P/8=
</value>
  </data>
</root>